-- Práctica #4: Consultas Avanzadas y Joins
-- Alumnos:
-- * Paredes Zamudio Luis Daniel
-- * Rivera Morales David
-- * Tapia Hernandez Carlos Alberto


-- * Sección #1: Creacion de Tablas

-- * Especificaciones de Desarollo
-- *
-- * - La base de datos debe incluir una tabla que almacene la informacion de los Empleados,
-- * incluyendo atributos como el employee id, first name, last name, email, hire date, y
-- * salary. Cada empleado debe estar asignado a un Departamento.
-- *
-- * - Los Departamentos deben ser gestionados en una tabla separada, con atributos como
-- * department id, department name, y manager id. Cada departamento tiene un gerente,
-- * que es un empleado, y puede tener multiples empleados asignados.
-- *
-- * - Los Proyectos en la empresa deben ser gestionados en otra tabla, que incluye atributos
-- * como project id, project name, start date, end date, y budget. Cada proyecto puede estar
-- * asociado a multiples empleados, y cada empleado puede estar asignado a multiples proyectos.
-- *
-- * - Las Asignaciones de Proyectos deben ser gestionadas en una tabla que relacione a los empleados
-- * con los proyectos a los que estan asignados. Esta tabla debe incluir atributos como assignment_id,
-- * employee id, project id, role, y hours_worked.
-- *
-- * - Se deben implementar relaciones de clave foranea entre las tablas, como la relacion entre
-- * employee_id en la tabla de Empleados y manager_id en la tabla de Departamentos, y entre
-- * department_id en la tabla de Empleados y la tabla de Departamentos. También debe existir una
-- * relacion entre employee_id y project_id en la tabla de Asignaciones de Proyectos.
-- *
-- * - El esquema debe permitir la extracción de información agregada, como el salario promedio de los
-- * empleados en cada departamento, el numero total de horas trabajadas por empleado en cada proyecto
-- * y el presupuesto total asignado a proyectos activos.
-- *
-- * - El sistema debe permitir el manejo de Proveedores, que son entidades externas involucradas en los
-- * proyectos. Los proveedores tienen atributos como supplier_id, supplier_name y contact_info. Cada
-- * proveedor puede estar relacionado con multiples proyectos, pero cada proyecto solo tiene un provedor.
-- *
-- * - Se debe manejar la relación entre Clientes y Proyectos. Cada cliente, almacenado en una tabla con
-- * atributos como customer_id, customer_name, contact_info, y project_id, puede estar relacionado con uno
-- * o más proyectos, y cada proyecto puede estar relacionado con multiples clientes.

CREATE TABLE DEPARTMENTS (
    DEPARTMENT_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    DEPARTMENT_NAME VARCHAR2(50) NOT NULL,
    MANAGER_ID NUMBER
);

CREATE TABLE EMPLOYEES (
    EMPLOYEE_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    FIRST_NAME VARCHAR2(50) NOT NULL,
    LAST_NAME VARCHAR2(50) NOT NULL,
    EMAIL VARCHAR2(100),
    DEPARTMENT_ID NUMBER,
    HIRE_DATE DATE,
    SALARY NUMBER,
    FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENTS(DEPARTMENT_ID)
);

-- Crear las tablas EMPLOYEES y DEPARTMENTS sin la relación MANAGER_ID y luego actualizar:

ALTER TABLE DEPARTMENTS
    ADD CONSTRAINT DEPARTMENTS_FK_MANAGER FOREIGN KEY (
        MANAGER_ID
    )
        REFERENCES EMPLOYEES(
            EMPLOYEE_ID
        );

-- Me di a entender que algo asi se necesita.
CREATE TABLE SUPPLIERS (
    SUPPLIER_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    SUPPLIER_NAME VARCHAR2(100) NOT NULL,
    CONTACT_INFO VARCHAR2(200)
);

CREATE TABLE CUSTOMERS (
    CUSTOMER_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    CUSTOMER_NAME VARCHAR2(100) NOT NULL,
    CONTACT_INFO VARCHAR2(200)
);


CREATE TABLE PROJECTS (
    PROJECT_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    SUPPLIER_ID NUMBER,
    CUSTOMER_ID NUMBER, -- Añadido para la relación con CUSTOMERS
    PROJECT_NAME VARCHAR2(100) NOT NULL,
    START_DATE DATE,
    END_DATE DATE,
    BUDGET NUMBER CHECK (BUDGET > 0),
    FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIERS(SUPPLIER_ID),
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID) -- Nueva llave foránea
);

CREATE TABLE PROJECT_ASIGNMENT (
    ASSIGNMENT_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    PROJECT_ID NUMBER,
    EMPLOYEE_ID NUMBER,
    ROLL VARCHAR2(20),
    HOURS_WORKED NUMBER,
    FOREIGN KEY (PROJECT_ID) REFERENCES PROJECTS(PROJECT_ID),
    FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEES(EMPLOYEE_ID)
);

CREATE TABLE CUSTOMER_PROJECT (
    CUSTOMER_ID NUMBER,
    PROJECT_ID NUMBER,
    PRIMARY KEY (CUSTOMER_ID, PROJECT_ID),
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID),
    FOREIGN KEY (PROJECT_ID) REFERENCES PROJECTS(PROJECT_ID)
);